#!/bin/bash

PROJECT_KEY=$(cat /etc/memfaultd.conf | jq -r '.project_key')
MEMFAULT_SOFTWARE_TYPE=$(cat /etc/memfaultd.conf | jq -r '.software_type')
MEMFAULT_SOFTWARE_VERSION=$(cat /etc/memfaultd.conf | jq -r '.software_version')
eval "$(memfault-device-info)"

LAST_REBOOT_REASON_FILE=$(cat /etc/memfaultd.conf | jq -r '.reboot.last_reboot_reason_file')

url=$(curl -f -s --get \
    --data-urlencode "hardware_version=${MEMFAULT_HARDWARE_VERSION}" \
    --data-urlencode "software_type=${MEMFAULT_SOFTWARE_TYPE}" \
    --data-urlencode "software_version=${MEMFAULT_SOFTWARE_VERSION}" \
    --data-urlencode "device_serial=${MEMFAULT_DEVICE_ID}" \
    --header "Memfault-Project-Key: ${PROJECT_KEY}" \
    "https://api.memfault.com/api/v0/releases/latest/url")
exit_code=$?

if [ "$exit_code" -eq 0 ] && [ -n "$url" ]; then
    active_system=$(rugix-ctrl system info | jq -r ".boot.activeGroup")
    if [ "$active_system" == "a" ]; then
        rugix-ctrl slots create-index boot-a casync-64 sha512-256
        rugix-ctrl slots create-index system-a casync-64 sha512-256
    else
        rugix-ctrl slots create-index boot-b casync-64 sha512-256
        rugix-ctrl slots create-index system-b casync-64 sha512-256
    fi
    rugix-ctrl update install --reboot no "$url"
    if [ $? -eq 0 ]; then
        # We set the reboot reason manually and then reboot using Rugix.
        echo "3" > "$LAST_REBOOT_REASON_FILE"
        rugix-ctrl system reboot --spare
    else
        logger -p user.err "OTA install failed"
    fi
else
    if [ "$exit_code" -ne 0 ]; then
        logger -p user.err "OTA status check request failed"
        logger -p user.err "curl returned exit code: ${exit_code}"
    fi
fi